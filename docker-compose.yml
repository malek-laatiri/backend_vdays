version: '3.4'

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
  orders:
    container_name: classification
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    extra_hosts:
      - "host.docker.internal:host-gateway"
  billing:
    container_name: scrapping
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:127.0.0.1"
  history:
    container_name: history
    build:
      context: .
      dockerfile: ./apps/history/Dockerfile
      target: development
    command: npm run start:dev history
    env_file:
      - ./apps/history/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '3003:3003'
  wishlist:
    container_name: wishlist
    build:
      context: .
      dockerfile: ./apps/wishlist/Dockerfile
      target: development
    command: npm run start:dev wishlist
    env_file:
      - ./apps/wishlist/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '3002:3002'
  user:
    container_name: users
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: npm run start:dev user
    env_file:
      - ./apps/user/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '3001:3001'
  settings:
    container_name: settings
    build:
      context: .
      dockerfile: ./apps/settings/Dockerfile
      target: development
    command: npm run start:dev settings
    env_file:
      - ./apps/settings/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '3004:3004'
  notification:
    container_name: notification
    build:
      context: .
      dockerfile: ./apps/notification/Dockerfile
      target: development
    command: npm run start:dev notification
    env_file:
      - ./apps/notification/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '3005:3005'

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - 'rabbitmq_data:/data'




volumes:
  rabbitmq_data:


